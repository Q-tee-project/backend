version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: qt_project_db
    environment:
      POSTGRES_USER: ${DB_USER:-root}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-1234}
      POSTGRES_DB: ${DB_NAME:-qt_project_db}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-schema.sql:/docker-entrypoint-initdb.d/init-schema.sql
    networks:
      - qt_project_network

  # Redis for Math Service (Celery)
  redis:
    image: redis:7-alpine
    container_name: qt_project_redis
    ports:
      - "6379:6379"
    networks:
      - qt_project_network

  # Math Service
  math-service:
    build:
      context: ./services/math-service
      dockerfile: Dockerfile
    container_name: math_service
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-qt_project_db}
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=${MATH_GEMINI_API_KEY:-${GEMINI_API_KEY}}
      - GOOGLE_VISION_API_KEY=${GOOGLE_VISION_API_KEY}
      - PORT=8000
    ports:
      - "8001:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/math-service:/app
    networks:
      - qt_project_network
    restart: unless-stopped

  # English Service
  english-service:
    build:
      context: ./services/english-service
      dockerfile: Dockerfile
    container_name: english_service
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-qt_project_db}
      - GEMINI_API_KEY=${ENGLISH_GEMINI_API_KEY:-${GEMINI_API_KEY}}
      - PORT=8000
    ports:
      - "8002:8000"
    depends_on:
      - postgres
    volumes:
      - ./services/english-service:/app
    networks:
      - qt_project_network
    restart: unless-stopped

  # Auth Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth_service
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-qt_project_db}
      - REDIS_URL=redis://redis:6379/0
      - SECRET_KEY=${AUTH_SECRET_KEY:-your-secret-key-change-in-production}
      - PORT=8000
    ports:
      - "8003:8000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/auth-service:/app
    networks:
      - qt_project_network
    restart: unless-stopped

  # Celery Worker for Math Service
  celery-worker:
    build:
      context: ./services/math-service
      dockerfile: Dockerfile.celery
    container_name: math_celery_worker
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-qt_project_db}
      - REDIS_URL=redis://redis:6379/0
      - GEMINI_API_KEY=${MATH_GEMINI_API_KEY:-${GEMINI_API_KEY}}
      - GOOGLE_VISION_API_KEY=${GOOGLE_VISION_API_KEY}
    depends_on:
      - postgres
      - redis
    volumes:
      - ./services/math-service:/app
    networks:
      - qt_project_network
    restart: unless-stopped

  # Flower for Celery Monitoring
  flower:
    build:
      context: ./services/math-service
      dockerfile: Dockerfile.celery
    container_name: math_flower
    command: celery -A app.celery_app flower
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-postgres}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-qt_project_db}
      - REDIS_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - postgres
      - redis
    networks:
      - qt_project_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  qt_project_network:
    driver: bridge